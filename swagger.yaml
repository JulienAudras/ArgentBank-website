swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /account:
    get:
      tags:
        - Account Module
      summary: Get User Accounts
      description: API to fetch user accounts by userId
      security:
        - Bearer: []
      responses:
        '200':
          description: User accounts retrieved successfully
          schema:
            $ref: '#/definitions/AccountApiResponse'
        '401':
          description: Unauthorized
        '404':
          description: User Not Found
        '500':
          description: Internal Server Error
  /transaction/{accountId}:
    get:
      tags:
        - Transaction Module
      summary: Get All Account's Transactions
      description: API to fetch account transactions by accountID
      parameters:
        - name: accountId
          in: path
          description: account ID
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: account transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionApiResponse'
        '401':
          description: Unauthorized
        '404':
          description: Account Not Found
        '500':
          description: Internal Server Error
  /transaction/custom/{accountId}/{startingDate}/{endingDate}:
    get:
      tags:
        - Transaction Module
      summary: Get Selected Period's Transactions
      description: API to fetch selected period's transactions by accountID
      parameters:
        - name: accountId
          in: path
          description: account ID
          required: true
          type: string
        - name: starting date
          in: body
          description: Request body containing user input with selected starting date
          required: true
          schema:
            type: object
            properties:
              userInputField:
                type: string
                format: date
        - name: ending date
          in: body
          description: Request body containing user input with selected ending date
          required: true
          schema:
            type: object
            properties:
              userInputField:
                type: string
                format: date
      security:
        - Bearer: []
      responses:
        '200':
          description: account transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionApiResponse'
        '401':
          description: Unauthorized
        '404':
          description: Account Not Found
        '500':
          description: Internal Server Error
  /transaction/{transactionId}:
    get:
      tags:
        - Transaction Module
      summary: Get A Specific Transaction
      description: API to fetch a specific transaction by transaction ID
      parameters:
        - name: transactionId
          in: path
          description: Transaction ID
          required: true
          type: string
      security:
        - Bearer: []
      responses:
        '200':
          description: transaction retrieved successfully
          schema:
            $ref: '#/definitions/TransactionApiResponse'
        '401':
          description: Unauthorized
        '404':
          description: Transaction Not Found
        '500':
          description: Internal Server Error
    patch:
      tags:
        - Transaction Module
      summary: Update Transaction's Note and Category
      description: API to update transaction's note and category by transactionId
      parameters:
      - name: transactionId
        in: path
        description: Transaction ID
        required: true
        type: string
      - name: Details
        in: body
        description: Request body containing user input for note and category updates
        required: true
        schema:
          type: object
          properties:
            note:
              type: string
            category:
              type: string
      security:
      - Bearer: []
      responses:
        '200':
          description: Transaction's note and category updated successfully
          schema:
            $ref: '#/definitions/TransactionApiResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '404':
          description: Transaction Not Found
        '500':
          description: Internal Server Error

  
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      UserName:
        type: string
        description: user userName 
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  AccountApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: '#/definitions/Account'
  TransactionApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: array
        items:
          $ref: '#/definitions/Transaction'
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  
  Account:
    properties:
      user:
        type: string 
        description: User's Id connected to that account
      accountName:
        type: string
        description: Account Name
      accountNumber:
        type: string
        description: Account Number
      balance:
        type: number  
        description: Balance of the account, in cents
      currency:
        type: string
        description: Account's currency
  Transaction:
    properties:
      account:
        type: string 
        description: Account's Id connected to transactions
      Date:
        type: string
        description: Transaction's date
      Description:
        type: string
        description: Transaction Description
      Transacation Type:
        type: string
        description: Transaction Type
      Category:
        type: string
        description: Transaction Category
      Note:
        type: string
        description: Transaction Note (Blank by default)
      Ammount:
        type: number  
        description: Ammount of the transaction, in cents
      Balance:
        type: number
        description: Balance of the account after the transaction, in cents
  Details:
    properties:
      transaction:
        type: string 
        description: Transaction's Id connected to category
      Category:
        type: string
        description: Transaction Category
      Note:
        type: string
        description: Transaction Note (Blank by default)
